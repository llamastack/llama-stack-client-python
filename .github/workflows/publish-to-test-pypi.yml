name: Publish Python üêç distribution üì¶ to TestPyPI

on:
  repository_dispatch:  # on trigger from llama-stack
    types: [build-client-package]

  workflow_dispatch:  # Keep manual trigger
    inputs:
      rc_version:
        description: 'RC version number (e.g., 1, 2, 3)'
        required: true
        type: string

  schedule:
    - cron: "0 0 * * *"  # Run every day at midnight

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Get date
      id: date
      run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
    - name: Update version for nightly
      if: github.event_name == 'schedule'
      run: |
        # Version is in pyproject.toml
        sed -i 's/version = "\([^"]*\)"/version = "\1.dev${{ steps.date.outputs.date }}"/' pyproject.toml
        sed -i 's/__version__ = "\([^"]*\)"/__version__ = "\1.dev${{ steps.date.outputs.date }}"/' src/llama_stack_client/_version.py
    - name: Update version for manual RC
      if: github.event_name == 'workflow_dispatch'
      run: |
        sed -i 's/version = "\([^"]*\)"/version = "\1rc${{ inputs.rc_version }}"/' pyproject.toml
        sed -i 's/__version__ = "\([^"]*\)"/__version__ = "\1rc${{ inputs.rc_version }}"/' src/llama_stack_client/_version.py
    - name: Update version for repository_dispatch
      if: github.event_name == 'repository_dispatch' && github.event.client_payload.source == 'llama-stack-nightly'
      run: |
        sed -i 's/version = "\([^"]*\)"/version = "\1${{ github.event.client_payload.version }}"/' pyproject.toml
        sed -i 's/__version__ = "\([^"]*\)"/__version__ = "\1${{ github.event.client_payload.version }}"/' src/llama_stack_client/_version.py
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testrelease
      url: https://test.pypi.org/p/llama-stack-client

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
